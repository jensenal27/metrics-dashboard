{"version":3,"sources":["column.js","columnsecond.js","line.js","d3_05.js","App.js","reportWebVitals.js","index.js"],"names":["Column","data","changeMetric","xAccessor","yAccessor","title","svgRef","useRef","dimensions","width","height","margin","top","right","bottom","left","boundedWidth","boundedHeight","rectColors","d","x","testFn","test","Set","map","forEach","item","y","filter","length","split","pop","push","sort","a","b","bounds","d3","current","attr","select","style","yScale","domain","range","xScale","updateTransition","duration","mean","selectAll","join","enter","append","barPadding","bandwidth","call","transition","update","exit","remove","text","xAxisGenerator","scale","on","useEffect","className","ref","transform","strokeWidth","color","x1","x2","y1","y2","stroke","strokeDasharray","fill","fontSize","ColumnSecond","setActiveAccount","yaya","console","log","rangeRound","tickFormat","slice","rectLabels","this","id","Line","dateParser","monthFormat","xFormat","parseTime","lineGenerator","curve","areaGenerator","y0","yAxisGenerator","ticks","r","opacity","D3_05","activeData","useState","activeAccount","dataTotal","setDataTotal","percentageTotal","parseInt","percentageClient","percentageInternal","App","metricData","setMetricData","meetingData","setMeetingData","activeMetricData","setActiveMetricData","activeYear","setActiveYear","apiMetric","url","then","response","catch","err","endsWith","dataFilter","onClick","backgroundColor","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e76ba468.chunk.js","sourcesContent":["import React, {useEffect, useRef} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst Column = ({data, changeMetric, xAccessor, yAccessor, title}) => {\r\n\r\n    const svgRef = useRef();\r\n\r\n    const width = 600\r\n    \r\n    let dimensions = {\r\n        width: width,\r\n        height: width * 0.5,\r\n        margin: {\r\n            top: 30,\r\n            right: 60,\r\n            bottom: 50,\r\n            left: 60\r\n        }\r\n    }\r\n\r\n    dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right\r\n    dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom\r\n\r\n    const rectColors = function(d) { return d.x === 'Market One' ? '#c02255' : \r\n                                            d.x === 'Market Two' ? '#a8709f' :\r\n                                            d.x === 'Market Three' ? '#42a54b' :\r\n                                            d.x === 'Market Four' ? '#b3dbe3' :\r\n                                            d.x === 'Market Five' ? '#80a68f' :\r\n                                            '#fafdff'}\r\n\r\n    const loadFn = () => {\r\n\r\n        const wrapper = d3.select(svgRef.current)\r\n            .attr('id', 'three')\r\n            .attr('width', dimensions.width)\r\n            .attr('height', dimensions.height)\r\n\r\n    }\r\n\r\n    const testFn = () => {\r\n\r\n        let test = []\r\n\r\n        const yaya = [...new Set(data.map(xAccessor))]\r\n\r\n        const x = yaya.forEach( function(item) {\r\n            const y = data.map(xAccessor).filter(d => d === item).length;\r\n            const x = item.split('(').pop().split(')')[0];\r\n            test.push({x, y})\r\n        })\r\n\r\n        test.sort((a, b) => b.y - a.y);\r\n\r\n        const wrapper = d3.select(svgRef.current)\r\n            .attr('id', 'three')\r\n            .attr('width', dimensions.width)\r\n            .attr('height', dimensions.height)\r\n\r\n        const bounds = wrapper.select('.bounds')\r\n            .style('transform', `translate(${\r\n                dimensions.margin.left\r\n            }px, ${\r\n                dimensions.margin.top\r\n            }px)`)\r\n\r\n        const yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(test, yAccessor)])\r\n            .range([dimensions.boundedHeight, 0])\r\n\r\n        const xScale = d3.scaleBand()\r\n            .domain(test.map(d => d.x))\r\n            .range([0, dimensions.boundedWidth])\r\n\r\n        const updateTransition = d3.transition()\r\n            .duration(1000)\r\n\r\n        const barPadding = 10\r\n\r\n        const barRects = bounds.selectAll('rect')\r\n            .data(test)\r\n            .join(\r\n                enter => enter.append('rect')\r\n                    .attr(\"x\", d => xScale(d.x) + barPadding / 2)\r\n                    .attr(\"y\", d => dimensions.boundedHeight)\r\n                    .attr(\"height\", 0)\r\n                    .attr(\"width\", xScale.bandwidth() - barPadding)\r\n                    .style('fill', '#44465b')\r\n                    .style('cursor', 'pointer')\r\n                .call(enter => enter.transition(updateTransition)\r\n                    .attr(\"y\", d => yScale(yAccessor(d)))\r\n                    .attr(\"height\", d => dimensions.boundedHeight - yScale(yAccessor(d)))\r\n                    .transition()\r\n                    .duration(250)\r\n                    .style('fill', rectColors)),\r\n                update => update.transition(updateTransition)\r\n                    .attr(\"x\", d => xScale(d.x) + barPadding / 2)\r\n                    .attr(\"y\", d => yScale(yAccessor(d)))\r\n                    .attr(\"height\", d => dimensions.boundedHeight - yScale(yAccessor(d)))\r\n                    .attr(\"width\", xScale.bandwidth() - barPadding)\r\n                    .style('fill', '#44465b')\r\n                .call(update => update.transition()\r\n                    .duration(250)\r\n                    .style('fill', rectColors)),\r\n                exit => exit.transition(updateTransition)\r\n                    .attr('y', d => dimensions.boundedHeight)\r\n                    .attr('height', 0)\r\n                    .style('fill', '#44465b')\r\n                .call(exit => exit.remove())\r\n            )\r\n\r\n        const barText = bounds.selectAll('#barlabel')\r\n            .data(test)\r\n            .join(\r\n                enter => enter.append('text')\r\n                    .attr('id', 'barlabel')\r\n                    .attr(\"x\", d => xScale(d.x) + xScale.bandwidth() / 2)\r\n                    .attr(\"y\", d => dimensions.boundedHeight)\r\n                    .text(yAccessor)\r\n                    .style('text-anchor', 'middle')\r\n                    .attr('fill', '#fafdff')\r\n                    .style('font-size', '12px')\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('display', function (d) { return (d.length === 0) ? 'none' : null })\r\n                .call(enter => enter.transition(updateTransition)\r\n                    .attr(\"x\", d => xScale(d.x) + xScale.bandwidth() / 2)\r\n                    .attr(\"y\", d => yScale(yAccessor(d)) - 5)\r\n                    .text(yAccessor)\r\n                    .style('text-anchor', 'middle')\r\n                    .attr('fill', '#fafdff')\r\n                    .style('font-size', '12px')\r\n                    .style('font-family', 'sans-serif'))\r\n                    .style('display', function (d) { return (d.length === 0) ? 'none' : null }),\r\n                update => update.transition(updateTransition)\r\n                    .attr(\"x\", d => xScale(d.x) + xScale.bandwidth() / 2)\r\n                    .attr(\"y\", d => yScale(yAccessor(d)) - 5)\r\n                    .text(yAccessor)\r\n                    .style('text-anchor', 'middle')\r\n                    .attr('fill', '#fafdff')\r\n                    .style('font-size', '12px')\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('display', function (d) { return (d.length === 0) ? 'none' : null }),\r\n                exit => exit.remove()\r\n            )\r\n\r\n        const mean = d3.mean(test, yAccessor)\r\n\r\n        const meanLine = bounds.selectAll('.meanline')\r\n            .data(test)\r\n            .transition(updateTransition)\r\n                .attr('x1', -4)\r\n                .attr('x2', dimensions.boundedWidth)\r\n                .attr('y1', yScale(mean))\r\n                .attr('y2', yScale(mean))\r\n                .attr('stroke', '#fafdff')\r\n                .attr('stroke-dasharray', '4px 8px')\r\n                .attr('stroke-width', '2px')\r\n                \r\n        const meanLabel = bounds.selectAll('.meanlabel')\r\n            .data(test)\r\n            .transition(updateTransition)\r\n                .attr('x', -40)\r\n                .attr('y', yScale(mean) + 2)\r\n                .text('mean')\r\n                .attr('fill', '#fafdff')\r\n                .style('font-size', '12px')\r\n\r\n        const xAxisGenerator = d3.axisBottom()\r\n            .scale(xScale)\r\n\r\n        const xAxis = bounds.select('.x-axis')\r\n            .transition(updateTransition)\r\n                .call(xAxisGenerator)\r\n\r\n        const xAxisLabel = bounds.select('.x-axis-label')\r\n            .attr('x', dimensions.boundedWidth / 2)\r\n            .attr('y', dimensions.margin.bottom - 10)\r\n            .attr('fill', '#fafdff')\r\n            .style('font-size', '1.4em')\r\n            .text(title)\r\n            .style('text-transform', 'capitalize')\r\n\r\n        function goData(d) {\r\n            changeMetric(d.x);\r\n        }\r\n\r\n        bounds.selectAll('rect')\r\n            .on('mousedown', goData)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        loadFn();\r\n        testFn();\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        \r\n        testFn();\r\n        \r\n    }, [data])\r\n\r\n    return(\r\n        <div className = 'col_wrap'>\r\n        <svg ref = {svgRef}>\r\n            <g className = 'bounds'>\r\n                <g className = 'x-axis' style={{transform: `translateY(${dimensions.boundedHeight}px)`, strokeWidth: '10px', color: '#fafdff'}}>\r\n                    <text className = 'x-axis-label'/>\r\n                </g>\r\n                <line className = 'meanline' x1='-4' x2='-4' y1={dimensions.boundedHeight / 2} y2={dimensions.boundedHeight / 2} stroke='#fafdff' strokeDasharray='4px 8px' strokeWidth='2px'/>\r\n                <text className = 'meanlabel' x='-40' y={(dimensions.boundedHeight / 2) + 2} text='mean' fill='#fafdff' fontSize='12px'/>\r\n            </g>\r\n        </svg>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Column;","import React, {useEffect, useRef} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst ColumnSecond = ({data, xAccessor, yAccessor, title, setActiveAccount}) => {\r\n\r\n    const svgRef = useRef();\r\n\r\n    const width = 475\r\n    \r\n    let dimensions = {\r\n        width: width,\r\n        height: width * 0.5,\r\n        margin: {\r\n            top: 30,\r\n            right: 40,\r\n            bottom: 50,\r\n            left: 40\r\n        }\r\n    }\r\n\r\n    dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right\r\n    dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom\r\n\r\n    let test = []\r\n\r\n    const yaya = [...new Set(data.map(xAccessor))]\r\n\r\n    const x = yaya.forEach( function(item) {\r\n        const y = data.map(xAccessor).filter(d => d === item).length;\r\n        const x = item;\r\n        test.push({x, y})\r\n    })\r\n\r\n    test.sort((a, b) => b.y - a.y);\r\n\r\n    console.log(test);\r\n\r\n    const rectColors = function(d) { return d.x === 'Partner' ? '#044662' :\r\n                                            d.x === 'Internal' ? '#0f5a7b' :\r\n                                            d.x === 'Client' ? '#227193' :\r\n                                            d.x === 'Community' ? '#3b809e' :\r\n                                            d.x === 'One-A' ? '#770026' :\r\n                                            d.x === 'One-B' ? '#9a103c' :\r\n                                            d.x === 'One-C' ? '#c02255' :\r\n                                            d.x === 'One-D' ? '#cf4772' :\r\n                                            d.x === 'Two-A' ? '#712966' :\r\n                                            d.x === 'Two-B' ? '#8d4882' :\r\n                                            d.x === 'Two-C' ? '#a8709f' :\r\n                                            d.x === 'Two-D' ? '#c69ebf' :\r\n                                            d.x === 'Three-A' ? '#0e6d14' :\r\n                                            d.x === 'Three-B' ? '#268b2c' :\r\n                                            d.x === 'Three-C' ? '#42a548' :\r\n                                            d.x === 'Three-D' ? '#6cc371' :\r\n                                            d.x === 'Four-A' ? '#51919d' :\r\n                                            d.x === 'Four-B' ? '#82bbc5' :\r\n                                            d.x === 'Four-C' ? '#b3dbe3' :\r\n                                            d.x === 'Four-D' ? '#dff3f7' :\r\n                                            d.x === 'Five-A' ? '#3c7653' :\r\n                                            d.x === 'Five-B' ? '#5b8d6f' :\r\n                                            d.x === 'Five-C' ? '#80a68f' :\r\n                                            d.x === 'Five-D' ? '#abc2b4' :\r\n                                            d.x === 'Room Three' ? '#0d0d2f' :\r\n                                            d.x === 'Room Two' ? '#1c1c45' :\r\n                                            d.x === 'Room One' ? '#2c2c54' :\r\n                                            '#fafdff'}\r\n\r\n    const loadFn = () => {\r\n\r\n        const wrapper = d3.select(svgRef.current)\r\n            .attr('id', 'three')\r\n            .attr('width', dimensions.width)\r\n            .attr('height', dimensions.height)\r\n\r\n    }\r\n\r\n    const testFn = () => {\r\n\r\n        if (title === 'Account') {\r\n            setActiveAccount(test[0].x)\r\n        }\r\n\r\n        const wrapper = d3.select(svgRef.current)\r\n            .attr('id', 'three')\r\n            .attr('width', dimensions.width)\r\n            .attr('height', dimensions.height)\r\n\r\n        const bounds = wrapper.select('.bounds')\r\n            .style('transform', `translate(${\r\n                dimensions.margin.left\r\n            }px, ${\r\n                dimensions.margin.top\r\n            }px)`)\r\n\r\n        const yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(test, yAccessor)])\r\n            .range([dimensions.boundedHeight, 0])\r\n\r\n        const xScale = d3.scaleBand()\r\n            .domain(test.map(d => d.x))\r\n            .rangeRound([0, dimensions.boundedWidth])\r\n\r\n        const updateTransition = d3.transition()\r\n            .duration(1000)\r\n\r\n        const barPadding = 6\r\n\r\n        const barRects = bounds.selectAll('rect')\r\n            .data(test)\r\n            .join(\r\n                enter => enter.append('rect')\r\n                    .attr(\"x\", d => xScale(d.x) + barPadding / 2)\r\n                    .attr(\"y\", d => dimensions.boundedHeight)\r\n                    .attr(\"height\", 0)\r\n                    .attr(\"width\", xScale.bandwidth() - barPadding)\r\n                    .style('fill', '#44465b')\r\n                .call(enter => enter.transition(updateTransition)\r\n                    .attr(\"y\", d => yScale(yAccessor(d)))\r\n                    .attr(\"height\", d => dimensions.boundedHeight - yScale(yAccessor(d)))\r\n                    .transition()\r\n                    .duration(250)\r\n                    .style('fill', rectColors)),\r\n                update => update.transition(updateTransition)\r\n                    .attr(\"x\", d => xScale(d.x) + barPadding / 2)\r\n                    .attr(\"y\", d => yScale(yAccessor(d)))\r\n                    .attr(\"height\", d => dimensions.boundedHeight - yScale(yAccessor(d)))\r\n                    .attr(\"width\", xScale.bandwidth() - barPadding)\r\n                    .style('fill', '#44465b')\r\n                .call(update => update.transition()\r\n                    .duration(250)\r\n                    .style('fill', rectColors)),\r\n                exit => exit.transition(updateTransition)\r\n                    .attr('y', d => dimensions.boundedHeight)\r\n                    .attr('height', 0)\r\n                    .style('fill', '#44465b')\r\n                .call(exit => exit.remove())\r\n            )\r\n\r\n        const barText = bounds.selectAll('#barlabel')\r\n            .data(test)\r\n            .join(\r\n                enter => enter.append('text')\r\n                    .attr('id', 'barlabel')\r\n                    .attr(\"x\", d => xScale(d.x) + xScale.bandwidth() / 2)\r\n                    .attr(\"y\", d => dimensions.boundedHeight)\r\n                    .text(yAccessor)\r\n                    .style('text-anchor', 'middle')\r\n                    .attr('fill', '#fafdff')\r\n                    .style('font-size', '10px')\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('display', function (d) { return (d.length === 0) ? 'none' : null })\r\n                .call(enter => enter.transition(updateTransition)\r\n                    .attr(\"x\", d => xScale(d.x) + xScale.bandwidth() / 2)\r\n                    .attr(\"y\", d => yScale(yAccessor(d)) - 5)\r\n                    .text(yAccessor)\r\n                    .style('text-anchor', 'middle')\r\n                    .attr('fill', '#fafdff')\r\n                    .style('font-size', '10px')\r\n                    .style('font-family', 'sans-serif'))\r\n                    .style('display', function (d) { return (d.length === 0) ? 'none' : null }),\r\n                update => update.transition(updateTransition)\r\n                    .attr(\"x\", d => xScale(d.x) + xScale.bandwidth() / 2)\r\n                    .attr(\"y\", d => yScale(yAccessor(d)) - 5)\r\n                    .text(yAccessor)\r\n                    .style('text-anchor', 'middle')\r\n                    .attr('fill', '#fafdff')\r\n                    .style('font-size', '10px')\r\n                    .style('font-family', 'sans-serif')\r\n                    .style('display', function (d) { return (d.length === 0) ? 'none' : null }),\r\n                exit => exit.remove()\r\n            )\r\n\r\n        const mean = d3.mean(test, yAccessor)\r\n\r\n        const meanLine = bounds.selectAll('.meanline')\r\n            .data(test)\r\n            .transition(updateTransition)\r\n                .attr('x1', -4)\r\n                .attr('x2', dimensions.boundedWidth)\r\n                .attr('y1', yScale(mean))\r\n                .attr('y2', yScale(mean))\r\n                .attr('stroke', '#fafdff')\r\n                .attr('stroke-dasharray', '4px 8px')\r\n                .attr('stroke-width', '2px')\r\n                \r\n        const meanLabel = bounds.selectAll('.meanlabel')\r\n            .data(test)\r\n            .transition(updateTransition)\r\n                .attr('x', -40)\r\n                .attr('y', yScale(mean) + 2)\r\n                .text('mean')\r\n                .attr('fill', '#fafdff')\r\n                .style('font-size', '12px')\r\n\r\n        const xAxisGenerator = d3.axisBottom()\r\n            .scale(xScale)\r\n            .tickFormat(function(d) { return d.split(': ').pop().slice(0, 3)})\r\n\r\n        const xAxis = bounds.select('.x-axis')\r\n            .transition(updateTransition)\r\n                .call(xAxisGenerator)\r\n\r\n        const xAxisLabel = bounds.select('.x-axis-label')\r\n            .attr('x', dimensions.boundedWidth / 2)\r\n            .attr('y', dimensions.margin.bottom - 10)\r\n            .attr('fill', '#fafdff')\r\n            .style('font-size', '1.4em')\r\n            .text(title)\r\n            .style('text-transform', 'capitalize')\r\n\r\n        const rectLabels = bounds.selectAll('.tick text')\r\n        \r\n        yaya.length > 20 ? rectLabels.style('display', 'none') : rectLabels.style('display', 'initial')\r\n\r\n        function onMouseEnter(d) {\r\n\r\n            const tooltip = d3.select(`#tooltip${title[0]}`)\r\n                .style('opacity', 1)\r\n            d3.select(this).style('fill', '#181a29')\r\n            d3.select(`#range${title[0]}`)\r\n                .text(d.x + '  |  ')\r\n            d3.select(`#count${title[0]}`)\r\n                .text(yAccessor(d) + ' Events')\r\n\r\n        }\r\n\r\n        function onMouseLeave(d) {\r\n            d3.select(`#tooltip${title[0]}`).style('opacity', 0)\r\n            d3.select(this).style('fill', rectColors)\r\n        }\r\n\r\n        bounds.selectAll('rect')\r\n            .on('mouseenter', onMouseEnter)\r\n            .on('mouseleave', onMouseLeave)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        loadFn();\r\n        testFn();\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        \r\n        testFn();\r\n        \r\n    }, [data])\r\n\r\n    return(\r\n        <div className = 'col_wrap'>\r\n        <svg ref = {svgRef}>\r\n            <g className = 'bounds'>\r\n                <g className = 'x-axis' style={{transform: `translateY(${dimensions.boundedHeight}px)`, strokeWidth: '2px',  color: '#fafdff'}}>\r\n                    <text className = 'x-axis-label'/>\r\n                </g>\r\n                <line className = 'meanline' x1='-4' x2='-4' y1={dimensions.boundedHeight / 2} y2={dimensions.boundedHeight / 2} stroke='#fafdff' strokeDasharray='4px 8px' strokeWidth='2px'/>\r\n                <text className = 'meanlabel' x='-40' y={(dimensions.boundedHeight / 2) + 2} text='mean' fill='#fafdff' fontSize='12px'/>\r\n            </g>\r\n        </svg>\r\n        <div className = 'tooltip' id = {`tooltip${title[0]}`}>\r\n            <span id = {`range${title[0]}`}></span>\r\n            <span id = {`count${title[0]}`}></span>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ColumnSecond;","import React, {useEffect, useRef} from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst Line = ({data}) => {\r\n\r\n    const svgRef = useRef();\r\n\r\n    const dateParser = d3.timeParse('%m/%e/%Y')\r\n    const monthFormat = d3.timeFormat('%b %y')\r\n    const xFormat = d => monthFormat(dateParser(d['Date Added']))\r\n\r\n    const yAccessor = d => d.y\r\n    const parseTime = d3.timeParse('%b %y')\r\n    const xAccessor = d => parseTime(d.item)\r\n\r\n    const width = 400\r\n    \r\n    let dimensions = {\r\n        width: width,\r\n        height: width * 0.5,\r\n        margin: {\r\n            top: 30,\r\n            right: 40,\r\n            bottom: 50,\r\n            left: 40\r\n        }\r\n    }\r\n\r\n    dimensions.boundedWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right\r\n    dimensions.boundedHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom\r\n\r\n    const axisLabel = 'Events'\r\n\r\n    let test = []\r\n\r\n    const yaya = [...new Set(data.map(xFormat))]\r\n\r\n    const x = yaya.forEach( function(item) {\r\n        const y = data.map(xFormat).filter(d => d === item).length;\r\n        test.push({item, y})\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n        const wrapper = d3.select(svgRef.current)\r\n            .attr('id', 'one')\r\n            .attr('width', dimensions.width)\r\n            .attr('height', dimensions.height)\r\n        \r\n        const bounds = wrapper.select('.bounds')\r\n            .style('transform', `translate(${\r\n                dimensions.margin.left\r\n            }px, ${\r\n                dimensions.margin.top\r\n            }px)`)\r\n\r\n        const yScale = d3.scaleLinear()\r\n            .domain(d3.extent(test, yAccessor))\r\n            .range([dimensions.boundedHeight, 0])\r\n\r\n        const xScale = d3.scaleTime()\r\n            .domain(d3.extent(test, xAccessor))\r\n            .range([0, dimensions.boundedWidth])\r\n\r\n        const lineGenerator = d3.line()\r\n            .x(d => xScale(xAccessor(d)))\r\n            .y(d => yScale(yAccessor(d)))\r\n            .curve(d3.curveBasis)\r\n\r\n        const areaGenerator = d3.area()\r\n            .x(d => xScale(xAccessor(d)))\r\n            .y0(dimensions.boundedHeight)\r\n            .y1(d => yScale(yAccessor(d)))\r\n            .curve(d3.curveBasis)\r\n\r\n        const updateTransition = d3.transition()\r\n            .duration(1000)\r\n\r\n        const line = bounds.selectAll('.line')\r\n            .data([test])\r\n            .join('path')\r\n            .attr('class', 'line')\r\n            .transition(updateTransition)\r\n            .attr('d', lineGenerator(test))\r\n            .attr('fill', 'none')\r\n            .attr('stroke', '#3c40c6')\r\n            .attr('stroke-width', 1.5)\r\n\r\n        const area = bounds.selectAll('.area')\r\n            .data([test])\r\n            .join('path')\r\n            .attr('class', 'area')\r\n            .transition(updateTransition)\r\n            .attr('d', areaGenerator(test))\r\n            .attr('fill', 'rgba(60, 64, 198, .15)')\r\n            .attr('pointer-events', 'none')\r\n        \r\n        const yAxisGenerator = d3.axisLeft()\r\n            .scale(yScale)\r\n        \r\n        const yAxis = bounds.select('.y-axis')\r\n            .transition(updateTransition)\r\n                .call(yAxisGenerator)\r\n\r\n        const xAxisGenerator = d3.axisBottom()\r\n            .scale(xScale)\r\n            .ticks(4)\r\n\r\n        const xAxis = bounds.select('.x-axis')\r\n            .transition(updateTransition)\r\n                .call(xAxisGenerator)\r\n\r\n        const xAxisLabel = bounds.select('.x-axis-label')\r\n            .attr('x', dimensions.boundedWidth / 2)\r\n            .attr('y', dimensions.margin.bottom - 10)\r\n            .attr('fill', '#fafdff')\r\n            .style('font-size', '1.4em')\r\n            .text(axisLabel)\r\n            .style('text-transform', 'capitalize')\r\n\r\n    }, [test])\r\n\r\n    return(\r\n        <div className = 'col_wrap'>\r\n            <svg ref = {svgRef}>\r\n                <g className = 'bounds'>\r\n                    <g className = 'x-axis' style={{transform: `translateY(${dimensions.boundedHeight}px)`, color: '#fafdff'}}>\r\n                        <text className = 'x-axis-label'/>\r\n                    </g>\r\n                    <g className = 'y-axis' style={{color: '#fafdff'}}/>\r\n                    <circle className = 'tooltipCircle' r='7' stroke='#f53b57' strokeWidth='4' fill='none' opacity='0'/>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Line;","import React, {useState, useEffect} from 'react';\r\nimport './column.css';\r\nimport Column from './column';\r\nimport ColumnSecond from './columnsecond';\r\nimport Line from './line';\r\n\r\nconst D3_05 = ({data, activeData, changeMetric}) => {\r\n\r\n    const [activeAccount, setActiveAccount] = useState('');\r\n    const [dataTotal, setDataTotal] = useState(0);\r\n\r\n    const percentageTotal = parseInt((data.length / dataTotal) * 100, 10)\r\n    const percentageClient = parseInt(((data.filter(d => d['Booking Event Type'] === 'Client').length / data.length) * 100), 10)\r\n    const percentageInternal = parseInt(((data.filter(d => d['Booking Event Type'] === 'Internal').length / data.length) * 100), 10)\r\n\r\n    const yAccessor = d => d.y\r\n    const marketAccessor = d => d['Market']\r\n    const typeAccessor = d => d['Booking Event Type']\r\n    const accountAccessor = d => d['Account']\r\n    const roomAccessor = d => d['Room']\r\n\r\n    const marketTitle = 'Market'\r\n    const typeTitle = 'Booking Event Type'\r\n    const accountTitle = 'Account'\r\n    const roomTitle = 'Room'\r\n\r\n    useEffect(() => {\r\n        setDataTotal(data.length);\r\n    }, [])\r\n\r\n    return(\r\n        <div className = 'col_container'>\r\n            <div className = 'col_main'>\r\n                <Column data={data} changeMetric={changeMetric} xAccessor={marketAccessor} yAccessor={yAccessor} title={marketTitle}/>\r\n                <div className = 'infoblock'><span className = 'maintitle'>{activeData}</span></div>\r\n                <div className = 'infoblock'><span className = 'subtitle'>Total Meetings</span><span className = 'title'>{data.length}</span></div>\r\n                <div className = 'infoblock'><span className = 'subtitle'>% Client</span><span className = 'title'>{percentageClient}%</span></div>\r\n                <div className = 'infoblock'><span className = 'subtitle'>Most Active Account</span><span className = 'title'>{activeAccount}</span></div>\r\n                <div className = 'infoblock'><span className = 'subtitle'>% of Total</span><span className = 'title'>{percentageTotal}%</span></div>\r\n                <div className = 'infoblock'><span className = 'subtitle'>% Internal</span><span className = 'title'>{percentageInternal}%</span></div>\r\n            </div>\r\n            <div className = 'col_second'>\r\n                <Line data={data}/>\r\n                <ColumnSecond data={data} setActiveAccount={setActiveAccount} xAccessor={accountAccessor} yAccessor={yAccessor} title={accountTitle}/>\r\n                <ColumnSecond data={data} xAccessor={typeAccessor} yAccessor={yAccessor} title={typeTitle}/>\r\n                <ColumnSecond data={data} xAccessor={roomAccessor} yAccessor={yAccessor} title={roomTitle}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default D3_05;","import React, {useEffect, useState} from 'react';\nimport * as d3 from 'd3';\nimport './App.css';\nimport D3_05 from './d3_05';\n\nconst App = () => {\n\n  const [metricData, setMetricData] = useState([]);\n  const [meetingData, setMeetingData] = useState([]);\n  const [activeMetricData, setActiveMetricData] = useState([]);\n  const [activeYear, setActiveYear] = useState([]);\n\n  const changeMetric = (d) => {\n    if(activeMetricData === 'All Markets') {\n      setMetricData(metricData.filter(a => a['Market'].includes(d)));\n      setActiveMetricData(d);\n    } else {\n      // apiMetric('../SiteAssets/metrics/metrics.csv');\n      apiMetric('./metrics.csv');\n      setActiveMetricData('All Markets');\n    }\n  }\n\n  const apiMetric = (url) => {\n\n    d3.csv(url).then(response => {\n      setMetricData(response);\n    }).catch(err => {\n      console.log('error reading population data' + err);\n    })\n\n  }\n\n  const dataFilter = () => {\n    setMeetingData(metricData);\n    let x = metricData;\n    if(activeYear === 1) {\n      setMeetingData(x.filter(d=> d['Date Added'].endsWith('18')));\n    } else if(activeYear === 2) {\n      setMeetingData(x.filter(d=> d['Date Added'].endsWith('19')));\n    }\n  }\n\n  const fyAll = () => {\n    setActiveYear(0);\n  }\n\n  const fy19Filter = () => {\n    setActiveYear(1);\n  }\n\n  const fy20Filter = () => {\n    setActiveYear(2);\n  }\n\n  useEffect(() => { \n    // apiMetric('../SiteAssets/metrics/metrics.csv');\n    apiMetric('./metrics.csv');\n    setActiveMetricData('All Markets');\n    setActiveYear(0);\n  }, [])\n\n  useEffect(() => {\n    dataFilter();\n  }, [metricData, activeYear])\n\n  return (\n    <div className=\"container\">\n      <div className = 'city'>Innovation Center | Event Metrics</div>\n      <div className = 'year'>\n        <div className = 'toggle' onClick = {fyAll} style={activeYear === 0 ? {backgroundColor: '#feffff', color: '#181a29'} : null}>All</div>\n        <div className = 'toggle' onClick = {fy19Filter} style={activeYear === 1 ? {backgroundColor: '#feffff', color: '#181a29'} : null}>2018</div>\n        <div className = 'toggle' onClick = {fy20Filter} style={activeYear === 2 ? {backgroundColor: '#feffff', color: '#181a29'} : null}>2019</div>\n        </div>\n      <div className = 'main'>\n        {meetingData.length ? <D3_05 data={meetingData} activeData={activeMetricData} changeMetric={changeMetric}/> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}